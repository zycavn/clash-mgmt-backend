// <auto-generated />
using System;
using ClashServer.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClashServer.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClashServer.Entities.Clash", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssignTo");

                    b.Property<Guid>("ClashGroupId");

                    b.Property<string>("ClashImagePath");

                    b.Property<string>("ClashPoint");

                    b.Property<string>("DateFound");

                    b.Property<string>("Description");

                    b.Property<string>("Distance");

                    b.Property<int>("ElementId1");

                    b.Property<int>("ElementId2");

                    b.Property<string>("GridLocation");

                    b.Property<string>("ItemName1");

                    b.Property<string>("ItemName2");

                    b.Property<string>("ItemPath1");

                    b.Property<string>("ItemPath2");

                    b.Property<string>("ItemType1");

                    b.Property<string>("ItemType2");

                    b.Property<string>("Layer1");

                    b.Property<string>("Layer2");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ClashGroupId");

                    b.ToTable("clash");
                });

            modelBuilder.Entity("ClashServer.Entities.ClashGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClashCode")
                        .IsRequired();

                    b.Property<Guid>("ProjectId");

                    b.Property<string>("Tolerance");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("clashgroup");
                });

            modelBuilder.Entity("ClashServer.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClashId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("Time");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("ClashId");

                    b.ToTable("comment");
                });

            modelBuilder.Entity("ClashServer.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Path");

                    b.Property<DateTime?>("UpdateTime");

                    b.HasKey("Id");

                    b.ToTable("project");
                });

            modelBuilder.Entity("ClashServer.Entities.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClashId");

                    b.Property<string>("NewStatus");

                    b.Property<string>("OldStatus");

                    b.Property<DateTime>("Time");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("ClashId");

                    b.ToTable("status");
                });

            modelBuilder.Entity("ClashServer.Entities.Clash", b =>
                {
                    b.HasOne("ClashServer.Entities.ClashGroup", "ClashGroup")
                        .WithMany("Clashes")
                        .HasForeignKey("ClashGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClashServer.Entities.ClashGroup", b =>
                {
                    b.HasOne("ClashServer.Entities.Project", "Project")
                        .WithMany("ClashGroups")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClashServer.Entities.Comment", b =>
                {
                    b.HasOne("ClashServer.Entities.Clash", "Clash")
                        .WithMany("Comments")
                        .HasForeignKey("ClashId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClashServer.Entities.Status", b =>
                {
                    b.HasOne("ClashServer.Entities.Clash", "Clash")
                        .WithMany("States")
                        .HasForeignKey("ClashId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
